---
- debug:
    msg: "ID is {{ droplet_id }}"
  ignore_errors: yes
  when: droplet_id is defined

# - name: ensure ssh key exists
#   user:
#     name: "{{ ansible_user_id }}"
#     # This will not overwrite an existing SSH key.
#     generate_ssh_key: yes
#     # Relative to the user's home directory
#     ssh_key_file: .ssh/id_rsa
#   become: true

# - name: ensure key exists at DigitalOcean
#   digital_ocean:
#     state: present
#     command: ssh
#     name: my_ssh_key
#     ssh_pub_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
#     api_token: "{{ DO_API_TOKEN }}"
#   register: my_ssh_key

- name: "Ensure droplet exists {{ item.value.name }}"
  digital_ocean:
    state: "{{ item.value.state|default('present') }}"
    command: "{{ item.value.command }}"
    name: "{{ item.value.name }}"
    # FIXME
    # unique_name: yes
    id: "{{ item.value.droplet_id |default(omit) }}"
    size_id: "{{ item.value.size_id|default('512mb') }}"
    region_id: "{{ item.value.region_id|default('nyc3') }}"
    image_id: "{{ item.value.image_id }}"
    ssh_key_ids: "{{ fact_jq_ssh_key_ids_only }}"
    wait_timeout: "{{ item.value.wait_timeout|default(500)|int }}"
  register: ensure_droplet
  with_dict: "{{ avenger_servers }}"

# ??? write to inventory
- local_action:
    module: blockinfile
    create: yes
    mode: 0666
    path: "{{ playbook_dir }}/{{ inventory_to_update }}"
    marker: "# {mark} {{ ensure_droplet.name }}"
    content: |
      [{{ droplet_groups }}]
      {{ ensure_droplet.name }} ansible_host={{ ensure_droplet.droplet.ip_address }} droplet_id={{ ensure_droplet.droplet.id }} ansible_ssh_user=root ansible_python_interpreter=/usr/bin/python

- name: 'PRINT: IP is {{ ensure_droplet.droplet.ip_address }}'
  debug:
    msg: "IP is {{ ensure_droplet.droplet.ip_address }}"

- local_action:
    module: add_host
    hostname: "{{ ensure_droplet.droplet.ip_address }}"
    groups: "{{ droplet_groups }}"
    ansible_ssh_user: root
    # ansible_ssh_private_key_file: "{{ '~/.ssh/id_rsa' | expanduser }}"
    ansible_host: "{{ ensure_droplet.droplet.ip_address }}"
    ansible_ssh_host: "{{ ensure_droplet.droplet.ip_address }}"
    ansible_python_interpreter: python

# - local_action:
#     module: gcdns_record
#     credentials_file: nobreach-855249fcb65a.json
#     record: "{{ name }}"
#     zone: "nobreach.se"
#     type: A
#     overwrite: true
#     record_data:
#       - "{{ droplet.droplet.ip_address }}"
